/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

# define DEFAULT 0
# define NUM 1
# define RSE 2
# define NAV 3

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | TAB  |  Q  |  W  |  F  |  P   |  B   |        |  J  |  L   |  U  |  Y  |  '  | NAV  |
// | LALT |  A  |  R  |  S  |  F   |  G   |        |  M  |  N   |  E  |  I  |  O  |  ;   |
// | CTRL |  Z  |  X  |  C  |  D   |  V   |        |  K  |  H   |  ,  |  .  |  /  | LGUI |
//                    | NAV | BSPC | SHFT |        | ENT | SPC  | NUM |
                        bindings = <
   &kp TAB    &kp Q &kp W &kp F &kp P &kp B        &kp J   &kp L    &kp U     &kp Y   &kp SQT  &mo NAV
   &kp LALT   &kp A &kp R &kp S &kp T &kp G        &kp M   &kp N    &kp E     &kp I   &kp O    &kp SEMI
   &kp LCTRL  &kp Z &kp X &kp C &kp D &kp V        &kp K   &kp H    &kp COMMA &kp DOT &kp FSLH &kp LGUI
                &mo NAV &kp BSPC  &kp LSHFT        &kp RET &kp SPACE &mo NUM
                        >;
                };

                num_layer {
// -----------------------------------------------------------------------------------------
//      | TAB  |  !  |  @  |  #  |   $  |  %   |      |  !  |   @  |   #  |   $   |  %  |   &  |
//      | LALT |  1  |  2  |  3  |   4  |  5   |      |  <  |   (  |   [  |   {   |  `  |   -  |
//      | CTRL |  6  |  7  |  8  |   9  |  0   |      |  ^  |   =  |   +  |   *   |  \  | LGUI |
//                         |     | BSPC | RSE  |      | ENT | SPC  |      |
                        bindings = <
   &kp TAB   &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT    &kp EXCL  &kp AT    &kp HASH &kp DLLR &kp PRCNT &kp AMPS
   &kp LALT  &kp N1   &kp N2 &kp N3   &kp N4   &kp N5       &kp LT    &kp LPAR  &kp LBKT &kp LBRC &kp GRAVE &kp MINUS
   &kp LCTRL &kp N6   &kp N7 &kp N8   &kp N9   &kp N0       &kp CARET &kp EQUAL &kp PLUS &kp STAR &kp BSLH  &kp LGUI
                       &trans &kp BSPC  &mo RSE             &kp RET &kp SPACE &trans
                        >;
                };

                rse_layer {
// -----------------------------------------------------------------------------------------
//   | TAB  |  F11 |  F12 |      |      |        |       |     |      |      |     |     |      |
//   | LALT |  F1  |  F2  |  F3  |  F4  |  F5    |       |  >  |  )   |  ]   |  }  |  ~  |  _   |
//   | CTRL |  F6  |  F7  |  F8  |  F9  |  F10   |       |     |      |      |     |  |  | LGUI |
//                        |      | BKSP |        |       | ENT | SPC  |      |
                        bindings = <
   &kp TAB   &kp F11 &kp F21 &trans &trans &trans        &trans &trans   &trans   &trans   &trans    &trans
   &kp LALT  &kp F1  &kp F2  &kp F3 &kp F4 &kp F5        &kp GT &kp RPAR &kp RBKT &kp RBRC &kp TILDE &kp UNDER
   &kp LCTRL &kp F6  &kp F7  &kp F8 &kp F9 &kp F10       &trans &trans   &trans   &trans   &kp PIPE  &kp LGUI
                            &trans &kp BSPC &trans       &kp RET &kp SPACE &trans
                        >;
                };


                nav_layer {
// -----------------------------------------------------------------------------------------
//   | TAB  |     |     |     |      |        |         |     | ESC  |  UP  |       | ALT+TAB |      |
//   | LALT | BT0 | BT1 | BT2 |  BT3 |   BT4  |         |     | LEFT | DOWN | RIGHT |         |      |
//   | CTRL |     |     | USB |  BLE | BT CLR |         |     |      |      |       |         | LGUI |
//                      |     | BKSP |  SHIFT |         | ENT | SPC  |      |
                        bindings = <
   &kp TAB   &trans    &trans    &trans    &trans       &trans                         &trans  &kp ESC &kp UP    &trans    &kp LA(TAB)  &trans
   &kp LALT  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4          &trans  &kp LEFT &kp DOWN &kp RIGHT &trans       &trans
   &kp LCTRL &trans       &trans       &out OUT_USB &out OUT_BLE &bt BT_CLR            &trans  &trans   &trans   &trans    &trans       &kp LGUI
                                                   &trans &kp BSPC  &kp LSHFT          &kp RET &kp SPACE &trans
                        >;
                };
        };
};
